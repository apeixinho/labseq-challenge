package org.labseq.api;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;
import org.labseq.api.controller.LabSeqController;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class LabseqSequenceTest {

    private final LabSeqController controller = new LabSeqController();

    @ParameterizedTest
    @CsvSource({
            "0, 0",
            "1, 1",
            "2, 0",
            "3, 1",
            "4, 1",
            "5, 1",
            "6, 1",
            "7, 2",
            "8, 2",
            "9, 2",
            "10, 3"
    })
    void testSequenceValues(int input, String expected) {
        assertEquals(expected, controller.getIndex(input));
    }

    @Test
    void testSequenceNumber15() {
        String result = controller.getIndex(15);
        assertEquals("8", result);
    }

    @Test
    void testSequenceNumber99() {
        String result = controller.getIndex(99);
        assertEquals("149397854", result);
    }

    @Test
    void testSequenceNumber19999() {
        String result = controller.getIndex(19999);
        String expectedValue = "10103026486595939630674649562674751784009708984213275071493559844466560349755691358538315719547652140616528918727388270968869623650518670180769065368534594163044599641037539022402359130463863035016255163697950128747061179453080008195276634835173906516048277646512836059748695275843837685441752661581468325262952636503527377177260237238907221037710968751780420450454848270758261449515834129133359826948832182701891447916620974205643502108817472056963044198124013915775252983240061809887207631600262250239432138967927995637550625896685958440163226693473395232500887428194147732804847413083544270519644762236445362322960914125774478424645446455540098279774251839402986016578722856447927221225439675284176729778476861010099800752905678135501288272344582067673145604618961026172676321072563697801283135904599433718961267338060421849732989305610740294035350542308414078333347517786386120234648975437801547433021333673207561492635797972532545930571810318657053544242331773114188965281341271876841471532097829668745803351900532002084769296328560715760929953143184837469040153181283151198572265175947078870829855733474336291657916286160075104299170810396729349044599605156417641591279789717872713358170799796119423302069291975101018012132879213200576611454849948424400548708830236030944627175405677421485658246883182024204331911014418970908153025843952469409710597945828014366630155217154979193924787453743090844395938606571875158903897798943527085694154729414925508352845688104540456024792483324689943014176378380391549580920497431482528466414653313808104924997372967144919133163688432719405130652206516838325928496726437551957041015659414769225809884123951132564115281140839627956095663957677767527744449879605045868076655396574745358599033";
        assertEquals(expectedValue, result);
    }

}
